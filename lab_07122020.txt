### ZADANIE 4
2)
SELECT w.nazwa, SUM(e.ilosc/z.waga)/COUNT(DISTINCT(u.id_uczestnika)) AS srednia FROM wyprawa1 AS w, zasob AS z, uczestnicy1 as u 
INNER JOIN ekwpiunek AS e ON u.id_uczestnika=e.idKreatury WHERE u.id_wyprawy=w.id_wyprawy AND z.idZasobu=e.idZasobu GROUP BY w.nazwa;

### ZADANIE 5

SELECT k.nazwa, DATEIFF(w.data_rozpoczecia, k.dataUr) AS dni_wyprawy FROM uczestnicy1 AS u 
INNER JOIN kreatura AS k INNER JOIN wyprawa AS w INNER JOIN etapy_wypraw AS et ON
w.id_wyprawy=u.id_wyprawy AND u.id_uczestnika=k.idKreatury AND w.id_wyprawy=et.idWyprawy WHERE
et.sektor=7;

LAB 07.12.2020

LAB 07

### ZADANIE 1 DZIURA
SELECT* FROM kreatura1;
CREATE TABLE kreatura2 SELECT* FROM wikingowie.kreatura;

DELIMITER //
CREATE TRIGGER waga_before
AFTER DELETE ON wyprawa1
FOR EACH ROW
BEGIN
	DECLARE czy_waga bool;
	IF NEW.waga<0
    THEN 
    SET NEW.waga = 0;
    END IF;
    END
    //
    DELIMITER ;
    
DELIMITER //

### ZADANIE 2 FUTRO

DELIMITER //


CREATE TRIGGER wyprawa_after_delete
AFTER DELETE ON wyprawa
FOR EACH ROW
BEGIN
INSERT INTO archiwum_wypraw SELECT w.id_wyprawy, w.nazwa, w.data_rozpoczecia,
w.data_zakonczenia, k.nazwa
from wyprawa w, kreatura k
WHERE w.kierownik=k.idKreatury
AND w.id_wyprawy=OLD.id_wyprawy;


INSERT INTO archiwum_wypraw VALUES(OLD.id_wyprawy, OLD.nazwa, OLD.data_rozpoczecia,
OLD.data_zakonczenia, (SELECT k.nazwa from kreatura where k.idKreatury=OLD.kierownik));
END
//

DELIMITER ;
    
